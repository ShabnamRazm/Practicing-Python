student={'name':'John','age':25,'courses':['Math','CompSci']}
#name, age, cources: KEYS
#John, 25, ['Math','CompSci']: Values
print(student['name'])  #John
print(student['courses']  #['Math','CompSci']
print(student.get('name'))  #John
print(student.get('phone'))  #None; instead of an error
print(student.get('phone','Not Found'))   #Not Found
#ADD:
student['phone']='555-5555'
student['name']='Jane'  #the value for name was updated to 'Jane'
#Add phone number, update name, update age:in one shot:
student.update({'name':'Jane','age':26,'phone':'555-5555'})
print(student)  #{'name': 'Jane', 'age': 26, 'courses': ['Math', 'CompSci'], 'phone': '555-5555'}

#DELET a specific key and its value: del OR pop(remove but also return that value)
del student['age']
print(student)

age=student.pop('age')
print(student)
print(age)

#LOOP through key & values:
student={'name':'John','age':25,'courses':['Math','CompSci']}
#How many keys we have in our dict?
print(len(student))  #3
#To see all of the keys
print(student.keys())
#To see all of the values
print(student.values())
#To see keys & values:
print(student.items())

student={'name':'John','age':25,'courses':['Math','CompSci']}
for key in student:
  print(key)
for key and value in student.items():
  print(key,value)

purse=dict()  #make a dictionary or purse={}
purse['money']=12
purse['candy']=3
purse['tissues']=75
print(purse)  #{'money': 12, 'candy': 3, 'tissues': 75}
print(purse['candy'])   #3
purse['candy']=purse['candy']+2
print(purse)  #{'money': 12, 'candy': 5, 'tissues': 75}

#Dictionaries are like lists except that they use keys instead of numbers to look up values
lst=list()
lst.append(21)
lst.append(183)
print(lst)  #[21,183]
lst[0]=23
print(lst)  #[23,183]

ddd=dict()
ddd['age']=21
ddd['course']=182
print(ddd)  #{'age': 21, 'course': 182}
ddd['age']=23
print(ddd)  #{'age': 23, 'course': 182}

ccc=dict()
ccc['csev']=1
ccc['cwen']=1
print(ccc)  #{'csev': 1, 'cwen': 1}
ccc['cwen']=ccc['cwen']+1
print(ccc)  #{'csev': 1, 'cwen': 2}

ccc=dict()
print(ccc['csev'])  #Error!
print('csev' in ccc)  #False  Use the 'in' operator to avoide the traceback

counts=dict()
names=['csev','cwen','csev','zqian','cwen']
for name in names:
  if name not in counts:
    counts[name]=1
  else:
    counts[name]=counts[name]+1
print(counts)

if name in counts:
  x=counts[name]
else:
  x=0
#Can be write like this: simplified counting with GET
x=counts.get(name,0)  #==>
counts=dict()
names=['csev','cwen','csev','zqian','cwen']
for name in names:
  counts[name]=counts.get(name,0)+1
print(counts)  #{'csev': 2, 'cwen': 2, 'zqian': 1}

#Counting pattern:
counts=dict()
line=input('Enter a line of the  text:')
words=line.split()
print('Words:',words)
print('Counting...')
for word in words:
  counts[words]=counts.get(word,0)+1
print('Counts',counts)

#Definite Loops and Dictionaries:
counts={'Chunk':1,'fred':42,'jan':100}
for key in counts:
  print(key,counts[key])

#Retriving lists of keys and values:
jjj={'Chunk':1,'fred':42,'jan':100}
print(list(jjj))  #['Chunk', 'fred', 'jan']
print(jjj.keys())  #dict_keys(['Chunk', 'fred', 'jan'])
print(jjj.values())  #dict_values([1, 42, 100])
print(jjj.items())  #dict_items([('Chunk', 1), ('fred', 42), ('jan', 100)])

jjj={'Chunk':1,'fred':42,'jan':100}
for aaa,bbb in jjj.items():
  print(aaa,bbb)

#PRACTICE
name=input('Enter File:')
handle=open(name)
counts=dict()
for line in handle:
  words=line.split()
  for word in words:
    counts[word]=counts.get(word,0)+1
bigcount=None
bigword=None
for word,count in counts.items():
  if bigcount is None or count>bigcount:
    bigword=word
    bigcount=count

#TUPLES & DICTIONARIES:
d=dict()
d['csev']=2
d['cwen']=4
for k,v in d.items():
  print(k,v)
tups=d.items()
print(tups)  #dict_items([('csev', 2), ('cwen', 4)])  2Tuples
#TUPLES are comparable:
(0,1,2)<(5,1,2)  #True 0<5
(0,1,2000000)<(0,3,4)  #True  1<3
('Jones','Sally')<('Jones','Sam')  #True  l<m
('Jones','Sally')>('Adams','Sam')  #True  J>A

#SORTING LISTS OF TUPLES:
d={'a':10,'b':1,'c':22}
d.items()  #dict_items([('a', 10), ('b', 1), ('c', 22)])
t=sorted(d.items())  #[('a', 10), ('b', 1), ('c', 22)]  Sort by KEYs
for k,v in t:
  print (k,v)
#Sorted by valus instead of keys:
c={'a':10,'b':1,'c':22}
tmp=list()
for k,v in c.items():
  tmp.append((v,k))
print(tmp)  #[(10, 'a'), (1, 'b'), (22, 'c')]
tmp=sorted(tmp,reverse=True)
print(tmp)  #[(22, 'c'), (10, 'a'), (1, 'b')]
#Even SHORTER version:
c={'a':10,'b':1,'c':22}
print(sorted([(v,k) for k,v in c.items()]))  #[(1, 'b'), (10, 'a'), (22, 'c')]

#The top 10 most common words:
fhand=open('romeo.txt')
counts=dict()
for line in fhand:
  words=line.split()
  for word in words:
    counts[word]=counts.get(word,0)+1
lst=list()
for key,val in counts.items():
  newtup=(val,key)
  lst.append(newtup)
lst=sorted(lst,reverse=True)
for val,key in lst[:10]:
  print(key,val)


